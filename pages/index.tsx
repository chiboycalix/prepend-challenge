import React from 'react';
import Head from 'next/head';
import Router from 'next/router';
import styles from '../styles/Home.module.css';
import { getAllPokemonData } from '../lib/pokemon';
import { Pokemon, Search } from '../components';

interface IResult {
  name: string;
  url: string;
  pokemonImg: string;
}
interface IProps {
  allPokemonData: {
    count: number;
    next: string;
    previous: string;
    result: IResult[];
  };
  page: number;
}

const Home= (props: IProps) => {
  const handlePrev = () => {
    Router.push(`/?page=${props.page - 1}`);
  };
  const handleNext = () => {
    Router.push(`/?page=${props.page + 1}`);
  };

  React.useEffect(() => {
    Router.push(`/?page=${props.page}`);
  }, [props.page]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Pokemon</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.content}>
        <h1>List of All Pokemon</h1>
        <Search />
        <ul className={styles.list}>
          {props.allPokemonData.result.map((pokemon: any) => {
            return <Pokemon pokemon={pokemon} key={pokemon.name} />;
          })}
        </ul>
        <div className={styles.btnWrapper}>
          <button
            onClick={handlePrev}
            disabled={props.page === 1}
            className={props.page === 1 ? styles.disabled : styles.btn}>
            Prev
          </button>
          <button
            disabled={props.page * 16 > props.allPokemonData.count}
            onClick={handleNext}
            className={
              props.page * 16 > props.allPokemonData.count
                ? styles.disabled
                : styles.btn
            }>
            Next
          </button>
        </div>
      </div>
    </div>
  );
};

export default Home;

export const getServerSideProps = async ({query: { page = 1 }}: {query:{page: number}}) => {
  const allPokemonData = await getAllPokemonData(page);
  return {
    props: {
      allPokemonData,
      page: +page,
    },
  };
};
